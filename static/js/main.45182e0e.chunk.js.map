{"version":3,"sources":["components/Filter.js","components/AllTodos.js","components/Header.js","components/Footer.js","components/Modal.js","App.js","index.js"],"names":["Filter","all","active","complete","count","theme","allLists","filterActive","filterAll","filterComplete","className","onClick","AllTodos","todos","activeCheck","toggleActive","toggleModal","deleteTodo","dragStart","dragEnd","dragOver","onDragOverCapture","e","map","todo","id","draggable","onDragStart","onDragEnd","task","xmlns","width","height","fillRule","d","fill","stroke","strokeWidth","Header","addTodo","changeTheme","useState","text","setText","onSubmit","preventDefault","type","placeholder","value","onChange","target","Footer","Modal","check","visible","deleteCompleted","App","lists","body","document","querySelector","setAllLists","setTodos","setAll","setActive","setComplete","setTheme","setVisible","position","setPosition","setCheck","filter","list","length","setCount","countTodo","newCount","newList","Math","floor","random","newAll","push","newtodo","result","some","newLists","newTodos","memo","tasks","setTimeout","classList","add","offsetTop","remove","allList","querySelectorAll","forEach","Number","storeTempTodos","stopPropagation","ul","dragged","prepend","tagName","after","offsetHeight","before","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45182e0e.chunk.js","sourcesContent":["const Filter = ({\n  all,\n  active,\n  complete,\n  count,\n  theme,\n  allLists,\n  filterActive,\n  filterAll,\n  filterComplete,\n}) => {\n  return (\n    <div className={`filter ${theme} ${count ? \"\" : \"zero\"}`}>\n      <button\n        className={`filter-list ${all}`}\n        onClick={() => filterAll(allLists)}\n      >\n        All\n      </button>\n      <button\n        className={`filter-list ${active}`}\n        onClick={() => filterActive(allLists)}\n      >\n        Active\n      </button>\n      <button\n        className={`filter-list ${complete}`}\n        onClick={() => filterComplete(allLists)}\n      >\n        Completed\n      </button>\n    </div>\n  );\n};\n\nexport default Filter;\n","import Filter from \"./Filter\";\n\nconst AllTodos = ({\n  allLists,\n  todos,\n  count,\n  all,\n  active,\n  complete,\n  theme,\n  activeCheck,\n  toggleActive,\n  toggleModal,\n  deleteTodo,\n  filterActive,\n  filterAll,\n  filterComplete,\n  dragStart,\n  dragEnd,\n  dragOver,\n}) => {\n  return (\n    <main className=\"main\">\n      <div className={`lists ${theme}`}>\n        <ul className=\"todo-lists\" onDragOverCapture={(e) => dragOver(e)}>\n          {todos.map((todo) => {\n            if (todo.active) {\n              return (\n                <li\n                  id={todo.id}\n                  className=\"todo-item\"\n                  key={todo.id}\n                  draggable=\"true\"\n                  onDragStart={dragStart}\n                  onDragEnd={dragEnd}\n                >\n                  <div className=\"item\">\n                    <div\n                      className=\"circle\"\n                      onClick={() => toggleActive(todo.id)}\n                    ></div>\n                    {todo.task}\n                  </div>\n                  <div className=\"cross\" onClick={() => deleteTodo(todo.id)}>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"18\"\n                      height=\"18\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"\n                      />\n                    </svg>\n                  </div>\n                </li>\n              );\n            } else {\n              return (\n                <li\n                  id={todo.id}\n                  className=\"todo-item complete\"\n                  key={todo.id}\n                  draggable=\"true\"\n                  onDragStart={dragStart}\n                  onDragEnd={dragEnd}\n                >\n                  <div className=\"item\">\n                    <div\n                      className=\"circle\"\n                      onClick={() => toggleActive(todo.id)}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"11\"\n                        height=\"9\"\n                      >\n                        <path\n                          fill=\"none\"\n                          stroke=\"#FFF\"\n                          strokeWidth=\"2\"\n                          d=\"M1 4.304L3.696 7l6-6\"\n                        />\n                      </svg>\n                    </div>\n                    {todo.task}\n                  </div>\n                  <div className=\"cross\" onClick={() => deleteTodo(todo.id)}>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"18\"\n                      height=\"18\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"\n                      />\n                    </svg>\n                  </div>\n                </li>\n              );\n            }\n          })}\n        </ul>\n        {count ? (\n          <div className=\"list-status\">\n            <p className=\"list-count\">{count} items left</p>\n            <button\n              className=\"clear\"\n              onClick={() => {\n                activeCheck();\n                toggleModal();\n              }}\n            >\n              Clear Completed\n            </button>\n          </div>\n        ) : (\n          <div className=\"list-status\">\n            <p className=\"list-count zero\">\n              There is no todo left. Please add new todo!\n            </p>\n          </div>\n        )}\n      </div>\n      <Filter\n        all={all}\n        active={active}\n        complete={complete}\n        count={count}\n        theme={theme}\n        allLists={allLists}\n        filterActive={filterActive}\n        filterAll={filterAll}\n        filterComplete={filterComplete}\n      />\n    </main>\n  );\n};\n\nexport default AllTodos;\n","import { useState } from \"react\";\n\nconst Header = ({ addTodo, theme, changeTheme }) => {\n  const [text, setText] = useState(\"\");\n\n  return (\n    <header className={`header ${theme}`}>\n      <div className=\"container\">\n        <h1 className=\"title\">todo</h1>\n        <button className=\"change-theme\" onClick={changeTheme}>\n          {theme === \"dark\" && (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\">\n              <path\n                fill=\"#FFF\"\n                fillRule=\"evenodd\"\n                d=\"M13 21a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-5.657-2.343a1 1 0 010 1.414l-2.121 2.121a1 1 0 01-1.414-1.414l2.12-2.121a1 1 0 011.415 0zm12.728 0l2.121 2.121a1 1 0 01-1.414 1.414l-2.121-2.12a1 1 0 011.414-1.415zM13 8a5 5 0 110 10 5 5 0 010-10zm12 4a1 1 0 110 2h-3a1 1 0 110-2h3zM4 12a1 1 0 110 2H1a1 1 0 110-2h3zm18.192-8.192a1 1 0 010 1.414l-2.12 2.121a1 1 0 01-1.415-1.414l2.121-2.121a1 1 0 011.414 0zm-16.97 0l2.121 2.12A1 1 0 015.93 7.344L3.808 5.222a1 1 0 011.414-1.414zM13 0a1 1 0 011 1v3a1 1 0 11-2 0V1a1 1 0 011-1z\"\n              />\n            </svg>\n          )}\n          {theme === \"light\" && (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\">\n              <path\n                fill=\"#FFF\"\n                fillRule=\"evenodd\"\n                d=\"M13 0c.81 0 1.603.074 2.373.216C10.593 1.199 7 5.43 7 10.5 7 16.299 11.701 21 17.5 21c2.996 0 5.7-1.255 7.613-3.268C23.22 22.572 18.51 26 13 26 5.82 26 0 20.18 0 13S5.82 0 13 0z\"\n              />\n            </svg>\n          )}\n        </button>\n      </div>\n      <div className={`create-task ${theme}`}>\n        <form\n          onSubmit={(e) => {\n            if (text !== \"\") {\n              e.preventDefault();\n              addTodo(text);\n              setText(\"\");\n            } else {\n              e.preventDefault();\n            }\n          }}\n        >\n          <div\n            className=\"circle\"\n            onClick={(e) => {\n              if (text !== \"\") {\n                e.preventDefault();\n                addTodo(text);\n                setText(\"\");\n              } else {\n                e.preventDefault();\n              }\n            }}\n          ></div>\n          <input\n            type=\"text\"\n            placeholder=\"Create a new todo...\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n        </form>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","const Footer = () => {\n  return (\n    <footer>\n      <div className=\"instruction\">\n        <p>Drag and drop to reorder list</p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","const Modal = ({ check, theme, visible, toggleModal, deleteCompleted }) => {\n  return (\n    <div className={`modal ${visible} ${theme}`}>\n      <div className=\"box\">\n        {check ? (\n          <div>\n            <p>Are you sure you want to delete all completed todos?</p>\n            <div className=\"button-box\">\n              <button className=\"cancel\" onClick={toggleModal}>\n                Cancel\n              </button>\n              <button\n                className=\"confirm\"\n                onClick={() => {\n                  deleteCompleted();\n                  toggleModal();\n                }}\n              >\n                Confirm\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <p>There is no \"completed\" todo left to be deleted!</p>\n            <button className=\"okay\" onClick={toggleModal}>\n              OK\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import AllTodos from \"./components/AllTodos\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Modal from \"./components/Modal\";\nimport { useState } from \"react\";\n\nfunction App() {\n  let lists = [\n    {\n      id: 1,\n      task: \"Complete online JavaScript course\",\n      active: false,\n    },\n    {\n      id: 2,\n      task: \"Jog around the park 3x\",\n      active: true,\n    },\n    {\n      id: 3,\n      task: \"10 minutes meditation\",\n      active: true,\n    },\n    {\n      id: 4,\n      task: \"Read for 1 hour\",\n      active: true,\n    },\n    {\n      id: 5,\n      task: \"Pick up groceries\",\n      active: true,\n    },\n    {\n      id: 6,\n      task: \"Complete Todo App on Frontend Mentor\",\n      active: true,\n    },\n  ];\n\n  const body = document.querySelector(\"body\");\n\n  const [allLists, setAllLists] = useState(lists);\n  const [todos, setTodos] = useState(allLists);\n  const [all, setAll] = useState(\"all\");\n  const [active, setActive] = useState(\"\");\n  const [complete, setComplete] = useState(\"\");\n  const [theme, setTheme] = useState(\"dark\");\n  const [visible, setVisible] = useState(\"hidden\");\n  const [position, setPosition] = useState(null);\n  const [check, setCheck] = useState(true);\n  const [count, setCount] = useState(() => {\n    const tempLists = lists.filter((list) => list.active === true);\n    return tempLists.length;\n  });\n\n  body.className = theme;\n\n  const changeTheme = () => {\n    if (theme === \"dark\") {\n      setTheme(\"light\");\n    } else {\n      setTheme(\"dark\");\n    }\n  };\n\n  const toggleActive = (id) => {\n    const newLists = allLists.map((list) => {\n      if (list.id === id) {\n        list.active = !list.active;\n      }\n      return list;\n    });\n\n    const newTodos = todos.map((todo) => todo);\n\n    setTodos(newTodos);\n    setAllLists(newLists);\n    countTodo(newLists);\n  };\n\n  const toggleModal = () => {\n    if (visible === \"hidden\") {\n      setVisible(\"visible\");\n    } else {\n      setVisible(\"hidden\");\n    }\n  };\n\n  const countTodo = (lists) => {\n    const newCount = lists.filter((list) => list.active === true);\n    setCount(newCount.length);\n  };\n\n  const activeCheck = () => {\n    const result = allLists.some((list) => list.active === false);\n    setCheck(result);\n  };\n\n  const addTodo = (text) => {\n    const newList = {\n      id: Math.floor(Math.random() * 10000000),\n      task: text,\n      active: true,\n    };\n\n    const newAll = allLists.map((list) => list);\n    newAll.push(newList);\n    const newtodo = todos.map((list) => list);\n    newtodo.push(newList);\n\n    setTodos(newtodo);\n    setAllLists(newAll);\n    countTodo(newAll);\n  };\n\n  const deleteTodo = (id) => {\n    const newLists = allLists.filter((list) => list.id !== id);\n    const newTodos = todos.filter((list) => list.id !== id);\n    setTodos(newTodos);\n    setAllLists(newLists);\n    countTodo(newLists);\n  };\n\n  const deleteCompleted = () => {\n    const newList = allLists.filter((list) => list.active !== false);\n    const newTodos = todos.filter((todo) => todo.active !== false);\n    setAllLists(newList);\n    setTodos(newTodos);\n  };\n\n  const filterAll = (memo) => {\n    setTodos(allLists);\n    setAll(\"all\");\n    setActive(\"\");\n    setComplete(\"\");\n  };\n\n  const filterActive = (memo) => {\n    const tasks = memo.filter((todo) => todo.active === true);\n    setTodos(tasks);\n    setActive(\"active\");\n    setAll(\"\");\n    setComplete(\"\");\n  };\n\n  const filterComplete = (memo) => {\n    const tasks = memo.filter((todo) => todo.active === false);\n    setTodos(tasks);\n    setComplete(\"complete\");\n    setActive(\"\");\n    setAll(\"\");\n  };\n\n  const storeTempTodos = () => {\n    const allList = document.querySelectorAll(\"li\");\n\n    const newLists = [];\n    allList.forEach((list) => {\n      newLists.push(...todos.filter((todo) => todo.id === Number(list.id)));\n    });\n\n    if (all) {\n      setAllLists(newLists);\n      setTodos(allLists);\n    }\n  };\n\n  const dragStart = (e) => {\n    setTimeout(() => {\n      e.target.classList.add(\"dragged\");\n    }, 0);\n\n    setPosition(e.target.offsetTop);\n  };\n\n  const dragEnd = (e) => {\n    setTimeout(() => {\n      e.target.classList.remove(\"dragged\");\n      storeTempTodos();\n    }, 0);\n  };\n\n  const dragOver = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const ul = document.querySelector(\"ul\");\n    const dragged = document.querySelector(\".dragged\");\n\n    if (e.target.offsetTop <= 0 && position > 0) {\n      ul.prepend(dragged);\n      setPosition(0);\n    } else if (e.target.offsetTop > 0 && e.target.tagName === \"LI\") {\n      if (position > e.target.offsetTop) {\n        e.target.after(dragged);\n        setPosition(e.target.offsetTop - e.target.offsetHeight / 2);\n      } else if (position < e.target.offsetTop) {\n        e.target.before(dragged);\n        setPosition(e.target.offsetTop + e.target.offsetHeight / 2);\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header addTodo={addTodo} theme={theme} changeTheme={changeTheme} />\n      <AllTodos\n        allLists={allLists}\n        todos={todos}\n        count={count}\n        all={all}\n        active={active}\n        complete={complete}\n        theme={theme}\n        activeCheck={activeCheck}\n        toggleActive={toggleActive}\n        toggleModal={toggleModal}\n        deleteTodo={deleteTodo}\n        filterAll={filterAll}\n        filterActive={filterActive}\n        filterComplete={filterComplete}\n        dragStart={dragStart}\n        dragEnd={dragEnd}\n        dragOver={dragOver}\n      />\n      <Modal\n        check={check}\n        theme={theme}\n        visible={visible}\n        toggleModal={toggleModal}\n        deleteCompleted={deleteCompleted}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/css/style.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}